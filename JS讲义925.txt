JS讲义

复习：
1、基本类型与引用类型的区别
  1)基本类型是简单的，只能存一个数据
    引用类型是复杂的，可以存多个数据
  2)存放区域不同：
    基本类型在栈区，有序的
    引用类型在堆去，无序的，必须通过地址引用
  3）基本类型：赋值等于复制
    引用类型赋值仅仅传递地址，数据不会复制

2、常用引用类型
1）Object对象类型
   a.创建方式
      var a=new Object();
      var a={name:'aaa',age:21};//JSON
   b.属性的动态性
     可以自由的增加和删除属性
      var a=new Object();
      a.name=“aaa”;//增加属性
      delete a.name;//删除属性
   c.属性访问方式:
     .号访问：a.name
     []号访问: a['name']

2）Array数组类型
  a.创建：
    1)new:   new可以省略
       var a=new Array();//空数组
       var a=new Array(10);//十个元素的数组，每个元素的初始值为undefined
       var a=new Array('a','b','c');//指定初始值创建数组 
    2)[]:
       var a=[];//空数组
       var a=[1,2,3,4,5,6];//指定初始值创建数组
  b.数组操作
   1.数组长度:length,特殊点，可以扩展数组大小,体现了数组的动态性
     var a=[1,2,3,4];
     a.length=6;//把数组扩展为6个元素
   2.元素访问：数组名[下标]；下标从0开始，最后一个元素下标是总长度减1
     如果下标超过总长度减1，自动添加元素,体现了数组的动态性
        var a = [1, 2, 3, 4];
        a[8] = 5;
        a数组自动增加成九个元素，中间元素为空值
     
   3.删除元素的值
     var a=[1,2,3,4];
     delete a[1];//删除第二个元素的值，但是不删除第二个元素

   4.类型测试:
     a. a instanceof Array
     b  Array.isArray(a)

   5.其它方法：

    a.push():在数组最后添加多个元素
    b.pop():在数组的最后删除一个元素
    c.unshift():在数组的前面添加多个元素
    d.shift():在数组的前面删除一个元素
    转换字符串
    e.toString();以逗号连接个元素值的字符串
    f.join(指定符号); 指定连接符号连接元素值得字符串
    截取:
    g.slice():截取原数组的部分元素，组成一个新数组，原数组不变
        var a = [1, 2, 3, 4, 5, 6, 7, 8, 9];
        var b = a.slice(1, 4);//截取从下标1开始到下标4之前的元素,如果没有结束的下标，就截取到最后
        alert("截取出的数组:" + b);
        alert("原始数组:" + a);
    h. splice():在原始数组上插入，删除，替换元素
       a.splice(2,3):删除从下标2开始的3个元素
       a.splice(2,0,"a","b"):在下标2的元素之前插入两个元素"a","b"
       a.splice(2,2,"a","c","b"):从下标2开始的两个元素替换为"a","c","b"三个元素



案例与练习
1、数组插入元素
   var a=[1,2,4,5,6,7];
   var inserted=3;
   for(var i=a.length-1;i>=0;i--){
	if(inserted<a[i]){
	   a[i+1]=a[i];	
        }else{
           a[i+1]=inserted;
           break;
        }
   }

2、三种排序：冒泡、选择、插入
  1)冒泡
   var a=[......]
   for(var i=0;i<a.length;i++){
     for(var j=0;j<a.length-i;j++){
	if(a[j]>a[j+1]){
           var t=a[j];
           a[j]=a[j+1];
           a[j+1]=t;
        }
     }
   }
  2)选择排序
   var a=[....];
   for(var i=0;i<a.length-1;i++{
     for(var j=i+1;j<a.length;j++){
	if(a[i]>a[j]){
          交换元素
        }
     }
   }
  3)插入排序
   var a=[....];
   for(var i=1;i<a.length;i++){
     var inserted=a[i];
     for(var j=i-1;j>=-1;j--){
	if(inserted<a[i]){
	   a[i+1]=a[i];	
        }else{
           a[i+1]=inserted;
           break;
        }       
     }
   }


4、九宫格,魔方阵
   退一行，进一列，如果出界，放对面，如果被占放下面
        //九宫格
        var a = [
            [0, 0, 0],
            [0, 0, 0],
            [0, 0, 0]
        ];
        //开始位置
        var i = 0;
        var j = 1;
        for (var k = 1; k <= 9; k++) {
            //填数
            a[i][j] = k;
            //计算下一个数的位置,存放到临时变量，以便调整
            var ii = i;
            var jj = j;
            //退一行
            ii--;
            //如果出界放对面
            if (ii < 0) ii = 2;
            //进一列
            jj++;
            if (jj > 2) jj = 0;
            //如果被占
            if (a[ii][jj] != 0) {
                ii = i + 1;
                jj = j;
            }
            //正式确定新位置
            i = ii;
            j = jj;
        }

        document.write("<table border=1>");
        for (var i = 0; i < 3; i++) {
            document.write("<tr>");
            for (var j = 0; j < 3; j++) {
                document.write("<td>");
                document.write(a[i][j]);
                document.write("</td>");
            }
            document.write("</tr>");

        }
        document.write("</table>");

5、围圈报数退出问题
        var a = [1, 2, 3, 4, 5, 6, 7, 8];
        //把元素的值改为0就是退出
        var online = 8; //在线人数
        var k = 0; //计数器
        //只要在线人数大于3个，圈就转下去
        while (online > 3) {
            //围一圈
            for (var i = 0; i < a.length; i++) {
                //非0元素报数
                if (a[i] != 0) k++;
                if (k == 3) {
                    //退出
                    a[i] = 0;
                    //在线人数减1
                    online--;
                    if (online == 3) break;
                    //重新计数
                    k = 0;
                }
            }
        }
        alert(a);


6、删除数组中等于某个指定值的所有元素，得到一个新数组(push)
   var a=[1,2,4,5,2,7,9,2,8];
   删除所有值为2的元素,得到一个新数组b，原始数组不变

7、找出数组最大值与最小值

8、打印螺旋数组
   1   2   3 
   8   9   4
   7   6   5
实践：
实现下拉菜单三级联动